<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-02-26T18:59:28+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Ivana Setiawan</title><subtitle>NerdOnAcid</subtitle><entry><title type="html">How to deploy SvelteKit on DigitalOcean App</title><link href="http://localhost:4000/fullstack/2023/12/29/deploy-sveletekit-digitalocean.html" rel="alternate" type="text/html" title="How to deploy SvelteKit on DigitalOcean App" /><published>2023-12-29T10:44:00+01:00</published><updated>2023-12-29T10:44:00+01:00</updated><id>http://localhost:4000/fullstack/2023/12/29/deploy-sveletekit-digitalocean</id><content type="html" xml:base="http://localhost:4000/fullstack/2023/12/29/deploy-sveletekit-digitalocean.html">&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Sounds so simple right?&lt;/h2&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Yep! but you know what Leonardo Da Vinci said, &quot;simplicity is the ultimate sophistication&quot;.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    In the process of establishing a new B2B startup within the manufacturing industry, I decided to turn myself into a full-stack engineer and build everything singlehandedly as pragmatic, cost efficient, yet easily to scale approach as possible.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    For the deployment, I explored various options like &lt;a href=&quot;https://vercel.com/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Vercel&lt;/a&gt;, &lt;a href=&quot;https://fly.io/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Fly.io&lt;/a&gt;, and &lt;a href=&quot;https://www.heroku.com/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Heroku&lt;/a&gt;, but I ultimately chose &lt;a href=&quot;https://www.digitalocean.com/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;DigitalOcean&lt;/a&gt; for a few key reasons—competitive pricing, a $200 voucher for 60 days, and the fact that Venopi also uses DigitalOcean.
    If you&apos;re still deciding, &lt;a href=&quot;https://zellwk.com/blog/netlify-vercel-digital-ocean/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Zell&lt;/a&gt; wrote a concise piece on this that I found quite agreeable.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    During the process of deployment, I bumped into some issues that unable me to proceed. Aka, my build failed and I couldn&apos;t figure out why..
    The error messages &amp; troubleshooting hints were too &quot;open&quot;, such as &lt;span class=&quot;text-red-500 font-medium&quot;&gt;Build Error: Job Failed&lt;/span&gt;, &lt;span class=&quot;text-red-500 font-medium&quot;&gt;Failed during deploy/build phase&lt;/span&gt;, &lt;span class=&quot;text-red-500 font-medium&quot;&gt;Out of Memory&lt;/span&gt;, and eventually &lt;span class=&quot;text-red-500 font-medium&quot;&gt;Deploy Error: Health Checks&lt;/span&gt;.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    My point is, I went through those errors so that you don&apos;t have to. Below is the step by step setup that I use for my SvelteKit project. Keep in mind that of course if your setup is different, then it might affect your build/deploy process.
    However if you are trying to deploy a &quot;common&quot; SvelteKit project, this should do the trick. Else, holla at me and I will do my best to help :)
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;DigitalOcean setup&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    First things first, click &quot;App&quot; on the sidebar and connect your GitHub project. Then follow these setup:
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/sveltekit-do/1.scaling.png&quot; alt=&quot;Scaling&quot; width=&quot;518&quot; height=&quot;220&quot; style=&quot;width: 518px; height: 220px;&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        1. Scaling (plan). Feel rich? pick more fancy options.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/sveltekit-do/2.source.png&quot; alt=&quot;Source&quot; width=&quot;503&quot; height=&quot;425&quot; style=&quot;width: 503px; height: 425px;&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        2. Source. My main branch is `main`. Change accordingly.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/sveltekit-do/3.env.png&quot; alt=&quot;File .env&quot; width=&quot;705&quot; height=&quot;292&quot; style=&quot;width: 705px; height: 292px;&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        3. File: .env - I use Supabase for my DB
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/sveltekit-do/4.commands.png&quot; alt=&quot;Commands&quot; width=&quot;495&quot; height=&quot;158&quot; style=&quot;width: 495px; height: 158px;&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        4. Commands
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/sveltekit-do/5.port.png&quot; alt=&quot;Port&quot; width=&quot;375&quot; height=&quot;69&quot; style=&quot;width: 375px; height: 69px;&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        5. Port
    &lt;/figcaption&gt;
&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;SvelteKit setup&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Right! Now let&apos;s do the setup on SvelteKit! Good to know is that I am using `svelte v4.2.7` and `SvelteKit v2.0.0` for this current setup.
    First, set the correct engines:
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// package.json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;engines&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;18.x&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;npm&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^9.6.7&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Then the `scripts` commands. The `start` commans is important.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// package.json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;vite dev&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;vite build&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;HOST=0.0.0.0 vite preview --host&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;node build/index.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;build:digitalocean&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;npm install --production=false &amp;amp;&amp;amp; npm run build &amp;amp;&amp;amp; npm ci&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;svelte-kit sync &amp;amp;&amp;amp; svelte-check --tsconfig ./jsconfig.json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;check:watch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;svelte-kit sync &amp;amp;&amp;amp; svelte-check --tsconfig ./jsconfig.json --watch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Make sure you install &quot;@sveltejs/adapter-node&quot;: &quot;^2.0.2&quot;:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;sveltejs&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/adapter-node --save-dev&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    And adjust the `svelte.config.js` accordingly:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// svelte.config.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adapter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@sveltejs/adapter-node&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vitePreprocess&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@sveltejs/vite-plugin-svelte&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;kit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;preprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vitePreprocess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Ok that&apos;s it! Now you can commit and push the changes to the `main` branch of your GitHub.
&lt;/p&gt;

&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/sveltekit-do/6.live.png&quot; alt=&quot;Live!&quot; width=&quot;704&quot; height=&quot;194&quot; style=&quot;width: 704px;&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        WE GOING LIVE!!
    &lt;/figcaption&gt;
&lt;/figure&gt;</content><author><name></name></author><category term="fullstack" /><category term="tech," /><category term="fullstack," /><category term="svelte," /><category term="svelteKit," /><category term="vercel," /><category term="pocket" /><summary type="html">In the process of establishing a new B2B startup within the manufacturing industry, I decided to turn myself into a full-stack engineer and build everything singlehandedly as pragmatic, cost efficient, yet easily to scale approach as possible.</summary></entry><entry><title type="html">Death—</title><link href="http://localhost:4000/personal/2023/12/07/death-daily-law-december.html" rel="alternate" type="text/html" title="Death—" /><published>2023-12-07T04:04:00+01:00</published><updated>2023-12-07T04:04:00+01:00</updated><id>http://localhost:4000/personal/2023/12/07/death-daily-law-december</id><content type="html" xml:base="http://localhost:4000/personal/2023/12/07/death-daily-law-december.html">&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;0534 &lt;span class=&quot;mb-4 md:mb-6 text-sm text-gray-400&quot;&gt;(The Daily Law: December)&lt;/span&gt;&lt;/h2&gt;

&lt;blockquote class=&quot;mb-4 md:mb-6 italic font-tpr leading-relaxed&quot;&gt;
    &lt;p class=&quot;text-2xl mb-4&quot;&gt;You detemine the quality of your mind by the nature of your daily thoughts.  &lt;span class=&quot;text-gray-500 text-sm&quot;&gt;— Many Yogis.&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Some people say that &quot;Death&quot; is our greatest fear. Is it yours?
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    In his inspiring Stanford commencement speech, Steve Jobs touched our souls, noting that even people who want to go to heaven don&apos;t want to die.
    Yet, death is the destination we all share. No one has ever escaped it, and that is as it should be because death is very likely the single best invention of life
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Consider this — you could die today. Your friends, lovers, parents, pets could die today. Young, physically healthy people die all the time. In fact, &lt;a class=&quot;textlink&quot; href=&quot;https://www.pbs.org/newshour/show/why-mortality-for-young-americans-is-increasing-at-an-alarming-rate&quot; target=&quot;_blank&quot;&gt;mortality for young Americans is increasing at an alarming rate&lt;/a&gt;.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    When you truly understand this, everything you experience will be more intense and meaningful. You will appreciate the people around you and every moment on a higher level.
    Because in the face of death, almost every-meaningless-things: pride, fear, ego, anger, just fade away... leaving only what truly matters. Whatever that is, everyone is different.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
Life is like standing at the shore of a vast, dark, ocean. You feel the fear of that dark ocean, the unpredictable and unapologetic nature, makes you want to turn away and retreat.
I want you to get into your tiny-little boat and go into that ocean and explore it. Because, in confronting the vast unknown, life becomes an exploration filled with richness and meaning.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6 border-l-4 border-gray-300 pl-4&quot;&gt;“When I look at my life and its secret colours, I feel like bursting into tears.”&lt;br&gt;― A Happy Death&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6 text-right&quot;&gt;
    To the infinity and beyond,&lt;br&gt;
    IS
&lt;/p&gt;</content><author><name></name></author><category term="personal" /><category term="personal" /><summary type="html">When you truly understand this, everything you experience will be more intense and meaningful.</summary></entry><entry><title type="html">The Morning Feeling</title><link href="http://localhost:4000/personal/2023/12/02/the-morning-feeling.html" rel="alternate" type="text/html" title="The Morning Feeling" /><published>2023-12-02T04:04:00+01:00</published><updated>2023-12-02T04:04:00+01:00</updated><id>http://localhost:4000/personal/2023/12/02/the-morning-feeling</id><content type="html" xml:base="http://localhost:4000/personal/2023/12/02/the-morning-feeling.html">&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;0400&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Waking up, I suddenly remembered bits of my childhood. It&apos;s funny; I can&apos;t recall much unless I see pictures. I have this one photo of me in a blue outfit, sitting on a chair, on top of a mini chair - I&apos;ve always been small. I think that&apos;s the only picture I have as a child...
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We all have things we regret, you know, those impulsive decisions driven by a short burst of excitement. Even though people debate it, most experts say the rational part of our brain (prefrontal cortex) is fully developed by age 25.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Though I didn&apos;t have the luxury of those short burst of excitements, I still think I messed up a lot—unintentionally breaking things as I went along.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Before turning 25, I used to believe strongly that I wouldn&apos;t live past that age. But when I actually hit 25, I didn&apos;t physically die, yet it felt like my heart and mind sort of gave up.
    Have you ever experienced something like that? Like a part of your soul just faded away, leaving you with a sense of numbness?
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    This autumn, I got news that my friend&apos;s colleague, age 23, took their own life, leaving a note saying they couldn&apos;t find a way to move forward.
    Whenever I hear such news, there&apos;s a silent exchange of understanding. I might even find myself recognizing the pain in their eyes. Oh, this year, I&apos;ve started seeing people&apos;s colors again. I can&apos;t explain it right now, but I&apos;ll try to one day.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Anyway, revisiting my childhood memories, I&apos;m sure we all have those fragmented recollections. I can recall only bits and pieces—the happiest moments, the saddest times, the most painful experiences. One thing remains constant, though: I can still vividly remember how I felt. Then I thought, ah Maya Angelou.. such a deep soul.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6 border-l-4 border-gray-300 pl-4&quot;&gt;“I&apos;ve learned that people will forget what you said, people will forget what you did, but people will never forget how you made them feel.” ― Maya Angelou&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    It&apos;s true, isn&apos;t it? Certain names can make me cringe, while others bring a smile to my face. Some names still carry the weight of a bittersweet goodbye..
    I just hope that the people in my circle will smile when they think of me—whether it&apos;s a peaceful smile, a loving smile, or even a dirty one. What matters most is that they feel loved.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Bottom line is, I want to be able to look at my life and own it. I guess this is why I always tell the truth, no matter how painful.
    People say that it&apos;s a brave decision, but what they don&apos;t understand is that, I can&apos;t live with the alternative.
    I cannot live knowing that I decieve people I care about. I&apos;d say quiet the opposite.. &quot;How dare you hiding things from people you care about?&quot;—That takes a lot of bravery.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6 text-right&quot;&gt;
    To the infinity and beyond,&lt;br&gt;
    IS
&lt;/p&gt;</content><author><name></name></author><category term="personal" /><category term="personal" /><summary type="html">Waking up, I suddenly remembered bits of my childhood. It&apos;s funny; I can&apos;t recall much unless I see pictures. I have this one photo of me in a blue outfit</summary></entry><entry><title type="html">System Design Crash Course for Beginners</title><link href="http://localhost:4000/code/2022/12/10/system-design-crash-course-for-beginners.html" rel="alternate" type="text/html" title="System Design Crash Course for Beginners" /><published>2022-12-10T08:34:00+01:00</published><updated>2022-12-10T08:34:00+01:00</updated><id>http://localhost:4000/code/2022/12/10/system-design-crash-course-for-beginners</id><content type="html" xml:base="http://localhost:4000/code/2022/12/10/system-design-crash-course-for-beginners.html">&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;The beginning&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Do you ever think of how to design the system of a marketplace website that allows millions of users to browse products and purchase them from start to finish? Or maybe wonder how a video streaming application like Netflix can stream so fast and show different video quality based on your internet connection speed?
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Me too! and this is why I want to start writing about System Design.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Why System Design is important?&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    As a software engineer, it&apos;s crucial to understand System Design because it is the backbone of any project and application.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    To advance our careers as software engineers and deliver long-term solutions, we need to know how to design an application&apos;s system and how each module, storage, server, and interface work together.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Especially when it comes to designing a system that supports millions of users. It can be challenging because it requires us to continuously improve and refine our strategy.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The best part is there are no &quot;right&quot; answers. Based on the project&apos;s requirements, which could always be dynamic and ever-changing, we can explore different solutions that satisfactorily fit the criteria.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    So let&apos;s dive into it and have fun!
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;What is System Design?&lt;/h2&gt;
&lt;figure class=&quot;border-l-4 border-l-slate-300 pl-4 md:pl-8 my-4 md:my-6&quot;&gt;
    &lt;blockquote class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        System design is the process of defining a system&apos;s entire requirements, such as the architecture, modules, interface, and design.
    &lt;/blockquote&gt;
    &lt;figcaption&gt;
        &lt;cite&gt;— &lt;i class=&quot;fa-brands fa-wikipedia-w mr-1.5&quot;&gt;&lt;/i&gt; Wikipedia&lt;/cite&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    To be able to design a large and complex system, we need to start with the most basic setup.
&lt;/p&gt;

&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Single server setup&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Let&apos;s start with the simplest setup, a single server setup. A single server setup is where everything (web, app, database, cache) runs on one server.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/system-design/single-server-setup.png&quot; width=&quot;704&quot; height=&quot;389&quot; alt=&quot;Single server setup&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Single server setup
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The flow is like this:
&lt;/p&gt;
&lt;ol class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;1&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            Users access the website via the domain name (www.venopi.com).
        &lt;/p&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            The Domain Name System (DNS) is a paid service provided by third parties that translates domain names (like www.venopi.com) into IP addresses (like 99.349.34.99) so browsers can load Internet resources.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;2&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            IP address is returned from the DNS to the browser or mobile app.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;3&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            Once the IP address is received, Hypertext Transfer Protocol (HTTP) requests are sent directly to our web server.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;3&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            The web server returns HTML or JSON response for rendering.
        &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Now we have received an HTML page on our Web browser or JSON on our Mobile app. What&apos;s next?
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Database&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    When the users are growing, more than one server is needed. We will need at least one server for the traffic (web and mobile) and the other for the database.
&lt;/p&gt;

&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/system-design/database.png&quot; width=&quot;704&quot; height=&quot;374&quot; alt=&quot;Multiple server: Database&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Multiple server: Database
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    There are two different kinds of databases: a &lt;strong&gt;relational database&lt;/strong&gt; and a &lt;strong&gt;non-relational database&lt;/strong&gt;.
&lt;/p&gt;

&lt;h3 class=&quot;text-xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Relational databases&lt;/h3&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Relational databases are known as relational database management system (RDBMS). It represents and stores data in tables and rows. You can join operations using SQL across different database tables. MySQL, PostgreSQL, Oracle database, and Amazon Relational Database Service (RDS) are the most popular ones.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Relational databases are the most commonly used ones. It&apos;s been around since the 70s and has proven to work well.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Relational databases could be the right choice if:
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The application works with related data.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The need to have a database instance automatically refreshes when one user updates a specific record and provides that information in real-time.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The application cares about assessing data integrity.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The application prioritises vertical scaling over horizontal scaling.
    &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class=&quot;text-xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Non-Relational databases&lt;/h3&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Non-Relational databases are called NoSQL databases. These databases are grouped into four categories: key-value stores, graph stores, column stores, and document stores. Join operations are generally not supported. The most popular ones are MongoDB, Cassandra, and Couchbase.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Non-Relational databases could be the right choice if:
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The application requires super-low latency.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The data is unstructured or has no relational data.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The purpose is to serialise and deserialised data (JSON, XML, YAML).
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The need to store a massive amount of data.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        The application prioritises availability over consistency.
    &lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Scaling&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Scaling is a common system problem when your application grows (more users, more orders, etc.).
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    There are two different types of scaling, vertical and horizontal.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;strong&gt;Vertical&lt;/strong&gt; means adding more power to the existing server (RAM, CPU).&lt;br&gt;
    &lt;strong&gt;Horizontal&lt;/strong&gt; means adding more servers next to your existing one.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Load balancer&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    A load balancer is a device between the user and the servers to ensure that no server is overworked by evenly distributing traffic to maximise speed and performance.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/system-design/load-balancer.png&quot; width=&quot;704&quot; height=&quot;472&quot; alt=&quot;Load balancer&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Load balancer
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    As shown above, users connect to the public IP of the load balancer instead of the web server. Then the load balancer communicates with the web servers via private IPs. The private IPs are used for communication between servers in the same network and are unreachable over the internet.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The nice part about this approach is that if server A goes down, all the traffic will be routed to server B. This means that the application is always gonna be online.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    If the traffic proliferates and two servers are no longer enough to handle it. We can add more servers, and the load balancer can handle it gracefully by automatically sending requests or traffic to them.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The web tier looks solid now. How about the database, though? We currently only have one. Is it enough, or can we improve the data tier?
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Database replication&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Yep! It is as it sounds. It&apos;s a method where we replicate the primary database (original) and create read replicas (copies) from it.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The primary database usually only supports the write operations, while the read replicas support the read operations. Any actions related to data modification (insert, delete, update) must only be sent to the primary.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/system-design/database-replication.png&quot; alt=&quot;Database replication&quot; height=&quot;540&quot; width=&quot;473&quot; class=&quot;inline-block h-[540px]&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Database replication (primary / read replicas)
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    So now we have the primary database and several read replicas, what if one of the databases goes offline?
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        &lt;p&gt;&lt;strong&gt;If there is only one read replica and it&apos;s offline&lt;/strong&gt;&lt;/p&gt;
        &lt;p&gt;The read operations will be directed to the primary temporarily. Once the issue is found, a new read replica database will replace the old one.&lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        &lt;p&gt;&lt;strong&gt;If there are multiple read replicas and one of them is offline&lt;/strong&gt;&lt;/p&gt;
        &lt;p&gt;The read operations will be directed to other healthy read replicas. Once the issue is found, a new read replica database will replace the old one.&lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        &lt;p&gt;&lt;strong&gt;If the primary is offline&lt;/strong&gt;&lt;/p&gt;
        &lt;p&gt;A read replica database will be promoted to be the primary. Then all the database operations will be temporarily executed on the new primary. A new read replica database will immediately replace the old one for data replication.&lt;/p&gt;
    &lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Our data tier looks solid now! What are the benefits of database replication?
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        &lt;p&gt;&lt;strong&gt;Higher reliability and availability&lt;/strong&gt;&lt;/p&gt;
        &lt;p&gt;The data will still be available even if one of the machines has a severe hardware failure because there are many replications across different locations. Spinning up a new database will be trivial.&lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        &lt;p&gt;&lt;strong&gt;Better data security&lt;/strong&gt;&lt;/p&gt;
        &lt;p&gt;Many replications across different locations also mean that the data will be safe on some servers, even if a disaster occurs on others.&lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-database&quot;&gt;&lt;/i&gt;
        &lt;p&gt;&lt;strong&gt;Performance improvement&lt;/strong&gt;&lt;/p&gt;
        &lt;p&gt;The model improves performance because the data is distributed on different servers. The primary is responsible for data modification, while read replicas are responsible for read operations.
    &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/system-design/database-replication-full.png&quot; width=&quot;704&quot; height=&quot;410&quot; alt=&quot;Web + Data tier flow&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Web + Data tier flow
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Let&apos;s go through it together:
&lt;/p&gt;
&lt;ol class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-[29px] rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;&lt;i class=&quot;fa-regular fa-circle-dot&quot;&gt;&lt;/i&gt;&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            Users get the public IP address of the load balancer from the DNS.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;&lt;i class=&quot;fa-regular fa-arrow-down&quot;&gt;&lt;/i&gt;&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            Users connect to the load balancer with the public IP address.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;&lt;i class=&quot;fa-regular fa-arrow-down&quot;&gt;&lt;/i&gt;&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            The HTTP request is routed to either server A or server B.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;&lt;i class=&quot;fa-regular fa-arrow-down&quot;&gt;&lt;/i&gt;&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            The web server (A/B) reads the data from one of the read replica databases.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-[29px] rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;&lt;i class=&quot;fa-regular fa-circle-dot&quot;&gt;&lt;/i&gt;&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            The web server (A/B) routes data-modification operations to the primary database.
        &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We now have a concrete understanding of how the web and data tier works. Let&apos;s talk about improving the load and response time.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Yes, we are talking about adding a cache layer and shifting static content to the CDN 👍
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Cache&lt;/h2&gt;
&lt;figure class=&quot;border-l-4 border-l-slate-300 pl-4 md:pl-8 my-4 md:my-6&quot;&gt;
    &lt;blockquote class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        A component that stores data so that future requests for that data can be served faster; the data stored in a cache might be the result of an earlier computation or a copy of data stored elsewhere.
    &lt;/blockquote&gt;
    &lt;figcaption&gt;
        &lt;cite&gt;— &lt;i class=&quot;fa-brands fa-wikipedia-w mr-1.5&quot;&gt;&lt;/i&gt; Wikipedia&lt;/cite&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Multiple calls are executed every time a web page loads to fetch the data. The application performance is significantly affected by calling the database repeatedly, and the cache can mitigate this issue.
&lt;/p&gt;

&lt;h3 class=&quot;text-xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Cache tier&lt;/h3&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The cache tier is a temporary data store layer that is much faster than the database. Having a cache tier can improve the system performance by reducing the database workload.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/system-design/cache.png&quot; width=&quot;704&quot; height=&quot;193&quot; alt=&quot;Cache tier&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Cache tier flow
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;1&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            When a request is received, the web server checks if the cache has the response. If it has, it sends the data back to the client.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;2&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            If not, it queries the database and stores the response in the cache.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;3&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            From the cache, sends the response to the client.
        &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Some tips when using the cache system:
&lt;/p&gt;

&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        Use cache when the data is read often but rarely modified. Cached data is stored in volatile memory. It will be gone if the cache server restarts, so important data should be saved in the persistent data stores.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        Implement an expiration policy. If not implemented, the cache data will be stored permanently in the memory. It&apos;s a good practice to clean up when data is expired.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        Implement the eviction policy. When the cache is full, existing items might be removed when new items are attempted to be added. Some variations of the cache eviction policy are &lt;strong&gt;Last Recently Used (LRU)&lt;/strong&gt;, &lt;strong&gt;Last Frequently Used (LFU)&lt;/strong&gt;, &lt;strong&gt;First In First Out (FIFO)&lt;/strong&gt;.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        Synchronize the data and the cache correctly. Maintaining consistency is very challenging when the product grows, and there are multiple caches and databases. A good read for this topic is &lt;a href=&quot;https://research.facebook.com/publications/scaling-memcache-at-facebook/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Scaling Memcache at Facebook&lt;/a&gt;.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        Avoid Single Point Of Failure (SPOF) at any cost.
    &lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Content Delivery Network (CDN)&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    CDN is a geographically distributed group of servers that work together to provide fast delivery of static content, such as images, stylesheets, javascript files, etc.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The way CDN work is straightforward. The further the users are located from the CDN server, the longer they will get data. Say if the CDN server is located in Amsterdam, users in Sweden will get the content faster than those in Canada.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The flow of CDN:
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/system-design/cdn.png&quot; width=&quot;704&quot; height=&quot;313&quot; alt=&quot;CDN&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        CDN flow
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;1&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            Suchi gets an image logo on Venopi. The CDN provider provides the URL&apos;s domain, such as: `https://venopi.cdnproviderx.net/logo.png`.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;2&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            If the CDN server doesn&apos;t have the logo in the cache, the CDN server requests the file from the origin, which can be a web server or online storage.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;3&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            The origin returns the logo to the CDN server, including the optional HTTP header Time-to-Live (TTL), which describes how long the image is cached.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;4&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            The CDN caches the logo and returns it to Suchi. The image remains cached in the CDN until the TTL expires.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;5&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            Other users visit venopi.com and request to get the logo.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;6&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            Other users will get the logo from the cache for as long as the TTL is not expired.
        &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Some tips when using CDN:
&lt;/p&gt;

&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        CDNs are charged per data transfer in and out of the CDN. You need to pay extra for this service. However, this doesn&apos;t necessarily mean that your total cost will increase. A CDN reduces the traffic to the origin; thus, you can use smaller servers.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        CDN increases security by detecting issues and blocking traffic earlier and increases the reliability and availability of the application. Even if the origin goes offline, users can get the cached version. More uptime means more revenue.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        Implement an expiration cache policy. Not too long but also not too short (&quot;lagom&quot; in Swedish). If it&apos;s too long, the content may not be fresh; if it&apos;s too short, it can cause repeat reloading of content from origin servers to the CDN.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        Implement the fallback in case of CDN failures. If CDN fails, clients should detect the problem and request resources from either other CDNs or the origin.&lt;br&gt;
        Most media companies use multiple CDNs instead of falling back to the origin, but this setup is overkill if the application only needs a simple setup.
    &lt;/li&gt;

    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-lightbulb&quot;&gt;&lt;/i&gt;
        Remove unused files by invalidating them before the expiration date. This can be done by using the CDN vendors&apos; APIs or using object versioning to serve a different version of the object. It looks like `https://venopi.cdnproviderx.net/logo.png?v=2` — which the `?v=2` indicates version #2.
    &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/system-design/cdn-flow.png&quot; width=&quot;704&quot; height=&quot;314&quot; alt=&quot;System design with CDN and cache&quot;/&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        System design with CDN and cache
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ol class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;1&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            Static assets (javascript files, images, videos, stylesheets, etc) are fetched from the CDN for better performance.
        &lt;/p&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;1&lt;/span&gt;
        &lt;p class=&quot;mb-2 md:mb-4&quot;&gt;
            The database load is reduced by the cache tier.
        &lt;/p&gt;
    &lt;/li&gt;
&lt;/ol&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;That&apos;s it for now!&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    I hope this post will help you understand better about System Design. I will write more about system design in the future, such as data center, stateless vs stateful architecture, message queues, sharding, three-tier architecture etc.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Feel free to ping me if you have any questions or suggestions 🌈
&lt;/p&gt;

&lt;p class=&quot;border-l-4 border-l-slate-300 pl-4 md:pl-8 my-4 md:my-6&quot;&gt;
    Special thanks to &lt;a href=&quot;https://www.linkedin.com/in/ioannislioupras/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Ioannis Lioupras (he/him)&lt;/a&gt; who gave me inputs with the naming (Primary/Read replica(s)), CDN cost review, and how the majority of the media companies use multiple CDNs instead of falling back to origin 🙏
&lt;/p&gt;</content><author><name></name></author><category term="code" /><category term="system-design" /><category term="database" /><category term="dns" /><category term="web-server" /><category term="cache" /><category term="load-balancer" /><category term="backend" /><category term="frontend" /><summary type="html">Do you ever think of how to design the system of a marketplace website that allows millions of users to browse products and purchase them from start to finish? Me too!</summary></entry><entry><title type="html">Monorepo with NPM workspaces</title><link href="http://localhost:4000/frontend/2022/10/23/monorepo-with-npm-workspaces.html" rel="alternate" type="text/html" title="Monorepo with NPM workspaces" /><published>2022-10-23T20:34:00+02:00</published><updated>2022-10-23T20:34:00+02:00</updated><id>http://localhost:4000/frontend/2022/10/23/monorepo-with-npm-workspaces</id><content type="html" xml:base="http://localhost:4000/frontend/2022/10/23/monorepo-with-npm-workspaces.html">&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Monorepo in a nutshell&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Monorepo is a collection of small projects or packages that can be combined to build a larger project. These small packages can also be independent and don&apos;t need to know anything about the other packages.
&lt;/p&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    In this article, we will create a Monorepo project using NPM Workspaces. The project is from my startup &lt;a href=&quot;https://www.venopi.com/&quot; class=&quot;textlink&quot; target=&quot;_blank&quot;&gt;Venopi&lt;/a&gt; and will have different frameworks and libraries for each application.
&lt;/p&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Let&apos;s get started&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We will build a Monorepo project consisting of two applications and two libraries. Each of the applications uses a different framework and library:
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;Dashboard App&lt;/span&gt;: Vite (Nuxt + Vue)
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;Web3 App&lt;/span&gt;: Next.js (React with TypeScript)
    &lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    For the libraries, we will &lt;a href=&quot;#tsup&quot; class=&quot;textlink&quot;&gt;create TypeScript libraries inside `libs` folder&lt;/a&gt;.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/monorepo_structure.png&quot; alt=&quot;Monorepo structure Venopi&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Monorepo structure we are building on Venopi.
    &lt;/figcaption&gt;
&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Setup&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Create your `package.json` file by running:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm init &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    When it&apos;s done, let&apos;s add the `workspaces` to the `package.json` to tell NPM that this project is a Monorepo project and adjust the `package.json` default content to what we want:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@venopi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Venopi using Monorepo design system&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ISC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;workspaces&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;apps/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;libs/*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;&lt;i class=&quot;fa-solid fa-lightbulb mr-1.5&quot;&gt;&lt;/i&gt; TIP:&lt;/span&gt; Good convention for naming is `@yourcompany`, so later on, when we have many packages, we can use: `@yourcompany/package-one`, `@yourcompany/package-two`, etc.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Install frameworks for applications into the Monorepo&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We will set up our applications to match our project structure by installing Next.js and NuxtJS applications into the Monorepo.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;apps
&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;libs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;h3 class=&quot;font-semibold mt-6 mb-2 md:mt-9 md:mb-4&quot;&gt;01. Dashboard App: Vite (Nuxt + Vue)&lt;/h3&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Let&apos;s create a Vite project with the latest version of Vue:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;apps
npm create vite@latest&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/vite-nuxt-vue.png&quot; alt=&quot;Vite + Nuxt + Vue&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Dashboard app: Vite + Nuxt + Vue
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Let&apos;s update the name inside `apps/dashboard/package.json`:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@venopi/dashboard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Awesome, we now have a Dashboard application using NuxtJS + Vue as its framework.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;font-semibold mt-6 mb-2 md:mt-9 md:mb-4&quot;&gt;02. Web3 App: Next.js (React with TypeScript)&lt;/h3&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Let&apos;s create a Next.js project with TS inside `apps/web3`.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npx create-next-app apps/web3 &lt;span class=&quot;nt&quot;&gt;--ts&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--use-npm&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Don&apos;t forget to update the name inside `apps/web3/package.json`:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@venopi/web3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Splendid, we now have a Web3 application using Next.js as its framework and React as its library with TypeScript syntax.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;font-semibold mt-6 mb-2 md:mt-9 md:mb-4&quot;&gt;NPM install&lt;/h3&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    OK, we are all set up, but before we run `npm install`, check your apps/dashboard and apps/web3. They should not have `package-lock.json` inside them.
    &lt;span class=&quot;underline underline-offset-8&quot;&gt;The only `package-lock.json` that exists must only be on the root folder&lt;/span&gt;.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Let&apos;s &lt;strong class=&quot;text-red-600 dark:text-pink-500&quot;&gt;go to the root folder&lt;/strong&gt; and run `npm install`.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-900 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/folder-structure.png&quot; height=&quot;540&quot; alt=&quot;Folder structure&quot; class=&quot;inline-block h-[540px]&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Folder structure. Only root has `package-lock.json`.
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    When we look at the `package-lock.json` on the root folder, we will see that the `apps/dashboard` and `apps/web3` are inside it.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;packages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@venopi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ISC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;workspaces&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;apps/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;libs/*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;apps/dashboard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@venopi/dashboard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hasInstallScript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;nuxt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.0.0-rc.12&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;apps/web3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;next&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;12.3.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;18.2.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;react-dom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;18.2.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;tsup&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Create a TypeScript library using tsup&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    In this demo, we will create a `utils` TypeScript library. First, let&apos;s create a directory called `utils` inside the `libs` folder and then create an empty `package.json` file:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;libs &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;utils &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;utils &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm init &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Make sure to change the name properly:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@venopi/utils&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Then we will install tsup into our package to bundle our TypeScript code.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;tsup &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;@venopi/utils&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Next, we will adjust our `package.json` inside `@venopi/utils`. We create a tsup object with the following:
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        Entry point (`entry`)
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        Configure it to generate the TypeScript definition (`dts`)
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        Generate source map (`sourcemap`)
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        Specify the format tsup to output ESM (`esm`) and CommonJS (`cjs`).
    &lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Tsup will generate the javascript files inside the `dist` folders. Therefore we need to update the `main` property to `dist/index.js` and add the `module` property to `dist/index.mjs`.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Lastly, we need to adjust the `scripts` accordingly. We want a `dev` script that will watch tsup and a `build` script that will just run tsup. Here is how our final `package.json` inside `@venopi/utils` looks like:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@venopi/utils&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dist/index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dist/index.mjs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;tsup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;entry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src/index.ts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sourcemap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;esm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cjs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tsup --watch&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tsup&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;tsup&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^6.3.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Beautiful. We have a tsup configuration in place! We can create a new TypeScript file (`index.ts`) inside the `libs/utils/src` folder that will export a constant called `cookie`.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;🍪&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    You are all set! Creating a TypeScript library is easy when you use tsup! To learn more about tsup, go &lt;a href=&quot;https://tsup.egoist.dev/&quot; class=&quot;textlink&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;How to run app-specific commands inside a Monorepo project?&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Running commands inside an npm monorepo workspaces is straightforward. You must type the `npm run` command with `-w [package name]`. For example, say we want to build `@venopi/utils`. We run:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm run build &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; @venopi/utils&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/npm-command-specific-package.png&quot; alt=&quot;npm run build command on @venopi/utils&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        npm run build command on @venopi/utils
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    If you want to run all across the packages:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm run build &lt;span class=&quot;nt&quot;&gt;-ws&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;How to install dependency for a specific package inside a Monorepo project?&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    In a real-world scenario, you might want to install different npm packages for different apps:
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        &lt;a href=&quot;https://www.npmjs.com/package/axios&quot; class=&quot;textlink&quot; target=&quot;_blank&quot;&gt;`axios`&lt;/a&gt; for `@venopi/dashboard` only
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        &lt;a href=&quot;https://www.npmjs.com/package/lodash&quot; class=&quot;textlink&quot; target=&quot;_blank&quot;&gt;`lodash`&lt;/a&gt; for all packages
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code&quot;&gt;&lt;/i&gt;
        &lt;a href=&quot;https://www.npmjs.com/package/express&quot; class=&quot;textlink&quot; target=&quot;_blank&quot;&gt;`express`&lt;/a&gt; in the root of the project
    &lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Is there a way to do this? Yes!
&lt;/p&gt;
&lt;h3 class=&quot;font-semibold mt-6 mb-2 md:mt-9 md:mb-4&quot;&gt;
    01. `axios` for `@venopi/dashboard` only:
&lt;/h3&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;axios &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; @venopi/dashboard&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/axios-dashboard-only.png&quot; alt=&quot;Axios only installed inside @venopi/dashboard&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Axios only installed inside @venopi/dashboard
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 class=&quot;font-semibold mt-6 mb-2 md:mt-9 md:mb-4&quot;&gt;
    02. `lodash` for all packages:
&lt;/h3&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;lodash &lt;span class=&quot;nt&quot;&gt;-ws&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-900 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/lodash-across-packages.png&quot; height=&quot;540&quot; alt=&quot;Lodash installed across packages&quot; class=&quot;inline-block h-[540px]&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Lodash installed across packages (package-lock.json)
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 class=&quot;font-semibold mt-6 mb-2 md:mt-9 md:mb-4&quot;&gt;
    03. `express` in the root of the project:
&lt;/h3&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;express &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-900 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/express-root.png&quot; alt=&quot;Express installed on the root folder&quot; class=&quot;inline-block&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Express installed on the root folder
    &lt;/figcaption&gt;
&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;How to run a dev script for all packages simultaneously in a Monorepo project?&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We will do this by installing a package called &lt;a href=&quot;https://www.npmjs.com/package/concurrently&quot; class=&quot;textlink&quot; target=&quot;_blank&quot;&gt;`concurrently`&lt;/a&gt;. Concurrently allows you to run multiple commands concurrently 👍 (brilliant name ey!)
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    To do this, let us install `concurrently` as a dev dependency on the root `package.json` of the project.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;concurrently &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    When the installation is done, we will add some scripts inside the `package.json` on the root folder. We need to create `dev:utils`, `dev:dashboard` and `dev:web3` then a generic `dev` using concurrently.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;concurrently &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;npm:dev:utils&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;npm:dev:dashboard&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;npm:dev:web3&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dev:utils&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm run dev -w @venopi/utils&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dev:dashboard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm run dev -w @venopi/dashboard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dev:web3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm run dev -w @venopi/web3&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Now we can run `npm run dev` and see that all our apps run simultaneously.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/concurrently_1.png&quot; alt=&quot;run all apps using concurrently&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Run all apps using concurrently
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/concurrently_2.png&quot; alt=&quot;Concurrently starts the ports for your apps simultanously&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Concurrently starts the ports for your apps simultanously
    &lt;/figcaption&gt;
&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;How to share code between the library and application in a Monorepo project?&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Remember our Cookie library? We want to use that Cookie on both the dashboard and web3 apps. How do we do that?
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; @venopi/utils &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; @venopi/dashboard &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; @venopi/web3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    When it&apos;s done, we can check if our library is indeed being installed across our packages.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-900 rounded-lg text-center&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/utils-across-apps.png&quot; height=&quot;540&quot; alt=&quot;@venopi/utils are installed inside @venopi/dashboard and @venopi/web3&quot; class=&quot;inline-block h-[540px]&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        @venopi/utils are installed inside @venopi/dashboard and @venopi/web3 (package-lock.json)
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Let us use the cookie lib on both of our apps. I want to show the Cookie on the title of the browser. On the `apps/dashboard`, I adjusted the `nuxt.config.js`:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@venopi/utils&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defineNuxtConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;utf-16&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;width=500, initial-scale=1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`Nuxt + Vue  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    On the `apps/web3`, I adjusted the `pages/index.tsx`:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// more code&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@venopi/utils&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Dashboard&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/title&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// more code&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Head&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// more code&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/browser-titles.png&quot; alt=&quot;Browser titles use cookie lib&quot; class=&quot;inline-block&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Browser titles use cookie lib
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    If we change the `libs/utils/src/index.ts` from 🍪 to 🍍, we will see the browser titles of Dashboard and Web3 be updated accordingly.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;🍍&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/monorepo/browser-titles-2.png&quot; alt=&quot;Browser titles with updated 🍍&quot; class=&quot;inline-block&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Browser titles with updated 🍍
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    That&apos;s it! You just created a Monorepo project with NPM workspaces 👏&lt;br&gt;
    You can check out the repo &lt;a href=&quot;https://github.com/ivanasetiawan/monorepo&quot; class=&quot;textlink&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Helpers&lt;/h2&gt;
&lt;ul&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://docs.npmjs.com/cli/v8/using-npm/workspaces&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;NPM Workspaces&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://tsup.egoist.dev/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;tsup&lt;/a&gt;:&lt;/strong&gt; Bundle your TypeScript library with no config, powered by esbuild.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://vitejs.dev/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Vite&lt;/a&gt;&lt;/strong&gt;: Next Generation Frontend Tooling
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://nextjs.org/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Next.js&lt;/a&gt;&lt;/strong&gt;: The React Framework for Production
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://v3.nuxtjs.org/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;NuxtJS&lt;/a&gt;&lt;/strong&gt;: The Hybrid Vue Framework
    &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="frontend" /><category term="code" /><category term="javascript" /><category term="nuxtjs" /><summary type="html">Monorepo is a collection of small projects or packages that can be combined to build a larger project. These small packages can also be independent and don&apos;t need to know anything about the other packages.</summary></entry><entry><title type="html">Create multiple routes to the same page on your NuxtJS project</title><link href="http://localhost:4000/frontend/2022/10/15/nuxtjs-multiple-routes-same-page.html" rel="alternate" type="text/html" title="Create multiple routes to the same page on your NuxtJS project" /><published>2022-10-15T07:34:00+02:00</published><updated>2022-10-15T07:34:00+02:00</updated><id>http://localhost:4000/frontend/2022/10/15/nuxtjs-multiple-routes-same-page</id><content type="html" xml:base="http://localhost:4000/frontend/2022/10/15/nuxtjs-multiple-routes-same-page.html">&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Background&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Imagine you have working NuxtJS pages with three steps onboarding forms and the url of these pages are:
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-ice-cream&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/onboarding&lt;/span&gt; (step 1 - a landing page with an entrance onboarding form)
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-ice-cream&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/onboarding/taste-preference&lt;/span&gt; (step 2 - share with us their taste preference)
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-ice-cream&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/onboarding/confirm&lt;/span&gt; (step 3 - share with us their personal info and get free samples)
    &lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;The Rainbow Campaign&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Today, your marketeer, let&apos;s call them Toni, and you, let&apos;s call you - you, had this conversation:
&lt;/p&gt;

&lt;div class=&quot;pl-10 my-4 md:my-6 relative&quot;&gt;
    &lt;p class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        Yo! I have a campaign to promote our new rainbow taste! The existing onboarding page looks perfect! We can reuse it!
    &lt;/p&gt;
    &lt;p&gt;— &lt;i class=&quot;fa-regular fa-user-bounty-hunter absolute text-2xl left-0 top-3&quot;&gt;&lt;/i&gt; Toni&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;pl-10 my-4 md:my-6 relative&quot;&gt;
    &lt;p class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        &quot;Sure thing Toni! Tell me more..&quot;
    &lt;/p&gt;
    &lt;p&gt;— &lt;i class=&quot;fa-regular fa-user-hair-mullet absolute text-2xl left-0 top-3&quot;&gt;&lt;/i&gt; You&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;pl-10 my-4 md:my-6 relative&quot;&gt;
    &lt;p class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        &quot;So the first landing page will have a different design but the form can stay as is. The url of the page will be &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/banana-rainbow-split&lt;/span&gt;...
        &lt;br&gt;&lt;br&gt;
        The rest of the form can stay as is, but for SEO purposes we want it to be &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/banana-rainbow-split/taste-preference&lt;/span&gt; and &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/banana-rainbow-split/confirm&lt;/span&gt;. What do you think?&quot;
    &lt;/p&gt;
    &lt;p&gt;— &lt;i class=&quot;fa-regular fa-user-bounty-hunter absolute text-2xl left-0 top-3&quot;&gt;&lt;/i&gt; Toni&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;pl-10 my-4 md:my-6 relative&quot;&gt;
    &lt;p class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        &quot;Sounds straightforward. Talk to my team&apos;s Product Owner and let&apos;s create a story!&quot; (yes.. we&apos;re Agile)
    &lt;/p&gt;
    &lt;p&gt;— &lt;i class=&quot;fa-regular fa-user-hair-mullet absolute text-2xl left-0 top-3&quot;&gt;&lt;/i&gt; You&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Execution&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    There are always several ways to do it. However, you want it to be quick, easy to clean up (when the campaign is done) and NuxtJS solution.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    So basically we will have:
&lt;/p&gt;
&lt;ul class=&quot;mb-4 md:mb-6&quot;&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-ice-cream&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/onboarding&lt;/span&gt;
        &lt;br&gt;
        On NuxtJS: pages/index.vue
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-ice-cream&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/banana-rainbow-split&lt;/span&gt;
        &lt;br&gt;
        On NuxtJS: pages/banana-rainbow-split/index.vue
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-ice-cream&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/onboarding/taste-preference&lt;/span&gt; = &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/banana-rainbow-split/taste-preference&lt;/span&gt;
        &lt;br&gt;
        Pointing to the same page: `pages/taste-preference.vue`
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-ice-cream&quot;&gt;&lt;/i&gt;
        &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/onboarding/confirm&lt;/span&gt; = &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;/banana-rainbow-split/confirm&lt;/span&gt;
        &lt;br&gt;
        Pointing to the same page: `pages/confirm.vue`
    &lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/frontend/nuxtjs-routes.png&quot; alt=&quot;NuxtJS routes&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        A page with multiple routes on NuxtJS
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Execution&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We will solve this using the power of NuxtJS modules. So the first step is to add routes module on your &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;nuxt.config.js&lt;/span&gt;:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// nuxt.config.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;buildModules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;~/modules/routes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Then create a folder called &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;modules&lt;/span&gt;, if you haven&apos;t had one and inside it create a file called &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;routes.js&lt;/span&gt;.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Inside this &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;routes.js&lt;/span&gt;, we will make the URLs magic happens.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// modules/routes.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nuxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;build:extendRoutes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rainbowCampaign&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;banana-rainbow-split&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/banana-rainbow-split&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pages/banana-rainbow-split/index.vue&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;banana-rainbow-split_taste-preference&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/banana-rainbow-split/taste-preference&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pages/taste-preference.vue&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;banana-rainbow-split_confirm&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/banana-rainbow-split/confirm&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pages/confirm.vue&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;rainbowCampaign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    That&apos;s it! You can &quot;reuse&quot; the same page, with its logic, validations and fancy effects, for multiple URLs 👏
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Have a better solution than this? Please let me know! I always love to improve 🙏
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Helpers&lt;/h2&gt;
&lt;ul&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://nuxtjs.org/docs/directory-structure/modules&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;NuxtJS: Modules&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://nuxtjs.org/docs/configuration-glossary/configuration-router#extendroutes&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;NuxtJS: extendRoutes&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://nuxtjs.org/docs/internals-glossary/internals-builder/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;NuxtJS: The Builder class&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="frontend" /><category term="code" /><category term="javascript" /><category term="nuxtjs" /><summary type="html">Do you need to have multiple routes to the same page on your NuxtJS project? Here is a clean and straightforward way to do it without double content.</summary></entry><entry><title type="html">Solidity structs and arrays</title><link href="http://localhost:4000/web3/2022/10/11/solidity-structs-arrays.html" rel="alternate" type="text/html" title="Solidity structs and arrays" /><published>2022-10-11T07:34:00+02:00</published><updated>2022-10-11T07:34:00+02:00</updated><id>http://localhost:4000/web3/2022/10/11/solidity-structs-arrays</id><content type="html" xml:base="http://localhost:4000/web3/2022/10/11/solidity-structs-arrays.html">&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    This article is a continuation of &lt;a href=&quot;/web3/2022/09/30/solidity-contract-1.html&quot; class=&quot;font-semibold textlink&quot;&gt;&quot;Let&apos;s write our first Solidity contract&quot;&lt;/a&gt;. I&apos;d highly recommend you to read that first.
&lt;/p&gt;

&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Bridge&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    On the previous article &quot;Let&apos;s write our first Solidity contract&quot;, we create a contract called `MyContract` with a uint256 public variable called `luckyNumber`.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// `view` =&amp;gt; Reading the value but not making any changes to the blockchain.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retrieve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Our `luckyNumber` variable can only store one single lucky number. What if we want to have multiple lucky numbers? or multiple lucky numbers of our friends?
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    There are several ways to do it, one of the ways is by creating a &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;struct&lt;/span&gt;.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Struct&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Using &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;struct&lt;/span&gt;, we can define our own type. It can be declared outside a contract and imported into another contract and is particularly useful for grouping together related data.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    For our case, we can create a friends object that holds both their name and lucky number.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Create a new type called &apos;Friends&apos;
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*
        Create a new `friend` variable using our new type `Friends`
        - `Friends` is the type (like `uint256`)
        - `public` is the visibility
        - `friend` is the variable name
    */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;friend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Oscar&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/Solidity/remix-struct-1.png&quot; alt=&quot;Struct 1&quot; class=&quot;mx-auto w-full&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Remix: Create a new `friend` variable using our new type `Friends`
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    If you wonder why there are `0` and `1` in front of the `0: string: name Oscar` and `1: uint256: luckyNumber 9`. It&apos;s the index of the different variables, and in computer science, the list starts with no `0`.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Whenever you have a list of variables inside an object in Solidity, they will automatically be indexed.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We have created a new `friend` variable using our struct `Friends`. While this works, if we want to add more friends, we must copy-paste many friend variables with different names and luckyNumbers, like so:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;friend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Oscar&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;friend2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Ani&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;friend3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;Suchi&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ..etc
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    That doesn&apos;t look effective, don&apos;t you think?
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Array&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    An effective way to create a list is using an &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;array data structure&lt;/span&gt;.
&lt;/p&gt;
&lt;div class=&quot;border-l-4 border-l-slate-300 pl-4 md:pl-8 my-4 md:my-6&quot;&gt;
    &lt;p class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        An array is a data structure that holds a list of other types and can be initialised with a fixed or dynamic size. It can hold primitive data types such as integers, boolean, and strings.
    &lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;How does it look like?&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Create a new type called &apos;Friends&apos;
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
        Create a new `friend` variable using our new type `Friends`
        - `Friends[]` is the type (like `uint256`).
          This means we want a type of an array of Friends
        - `public` is the visibility
        - `friend` is the variable name
    */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Yes, you can also add `[]` to another type, like: `uint256[] public friendsList;`
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Before we move forward, I want to quickly add that the `Friends[]` type of an array is called &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;Dynamic Array&lt;/span&gt; because the array size is not given at the array initialisation.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    If we specify `Friends[4]`, this means that this array of friends can only be four people, hence called &lt;span class=&quot;text-red-600 dark:text-pink-500&quot;&gt;Fixed-sized Array&lt;/span&gt;.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    For our case, we&apos;ll stick to the dynamic size array because we want to add an arbitrary number of friends to this array.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Adding &lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Nice! We have a dynamic array variable called `friends`. Now let&apos;s create a function to add friends to the friends array.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Create a new type called &apos;Friends&apos;
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Create a new `friend` variable using our new type `Friends`
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
        Create a public function to add friend to the friends array
        - `_name` is a string memory for `name`
          (Data location must be &quot;memory&quot; or &quot;calldata&quot; for parameter in function)
        - `_luckyNumber` is uint256 for `luckyNumber`
    */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addFriend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Adding a new friend to friends array
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newFriend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newFriend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Essential to know capitalise and lowercase matters. When you see `Friends`, we are talking about our struct `Friends`. When we type `friends`, we refer to the variable friends (dynamic-sized array)..
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    On the arguments function, you see a new keyword `memory` (`string memory _name`). It&apos;s required to specify for the data location. To learn more, you could look at &lt;a href=&quot;https://solidity-by-example.org/data-locations/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Solidity by example: Data Locations&lt;/a&gt;.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We could also improve our code above to be a one-liner. Like so:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Create a new type called &apos;Friends&apos;
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addFriend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/*
            Follow the pattern of the struct:
            [0] name
            [1] luckyNumber
            then we don&apos;t need to specify `{ name: _name, luckyNumber: _luckyNumber }`
        */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Helpers&lt;/h2&gt;
&lt;ul&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://solidity-by-example.org/structs/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Solidity by example: Structs&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://solidity-by-example.org/array/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Solidity by example: Array&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://solidity-by-example.org/data-locations/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Solidity by example: Data Locations&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="web3" /><category term="knowlegde" /><category term="blockchain" /><category term="Web3" /><category term="code" /><summary type="html">Solidity structs and arrays are common types often used to create smart contracts. In this article, we will learn about both types using easy-to-understand cases.</summary></entry><entry><title type="html">Let’s write our first Solidity contract</title><link href="http://localhost:4000/web3/2022/09/30/solidity-contract-1.html" rel="alternate" type="text/html" title="Let’s write our first Solidity contract" /><published>2022-09-30T07:34:00+02:00</published><updated>2022-09-30T07:34:00+02:00</updated><id>http://localhost:4000/web3/2022/09/30/solidity-contract-1</id><content type="html" xml:base="http://localhost:4000/web3/2022/09/30/solidity-contract-1.html">&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Why should you learn Solidity?&lt;/h2&gt;
&lt;figure class=&quot;border-l-4 border-l-slate-300 pl-4 md:pl-8 my-4 md:my-6&quot;&gt;
    &lt;blockquote class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        Solidity is is an object-oriented programming language for implementing smart contracts on various blockchain platforms, most notably, Ethereum. Programs in Solidity run on Ethereum Virtual Machine.
    &lt;/blockquote&gt;
    &lt;figcaption&gt;
        &lt;cite&gt;— &lt;i class=&quot;fa-brands fa-wikipedia-w mr-1.5&quot;&gt;&lt;/i&gt; Wikipedia&lt;/cite&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Mastering Solidity is a must for anyone who wants to be a Blockchain developer. Many prevalent cryptocurrencies and blockchain platforms such as Avalanche, Binance smart chain, Tron and Polkadot are compatible with Ethereum Virtual Machine (EVM). Thus Solidity works out of the box.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Even if you want to build a dApp on other blockchain platforms that don&apos;t use Solidity, your knowledge can be easily transferred to other smart contract languages.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Let&apos;s use Remix&lt;/h2&gt;
&lt;figure class=&quot;border-l-4 border-l-slate-300 pl-4 md:pl-8 my-4 md:my-6&quot;&gt;
    &lt;blockquote class=&quot;mb-4 text-xl leading-relaxed&quot;&gt;
        Remix IDE allows developing, deploying and administering smart contracts for Ethereum like blockchains. It can also be used as a learning platform.
    &lt;/blockquote&gt;
    &lt;figcaption&gt;
        &lt;cite&gt;— Remix project&lt;/cite&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Go to &lt;a href=&quot;https://remix.ethereum.org/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Remix IDE&lt;/a&gt; and clean up all the folders. Make sure to have a folder called `contracts`. Inside this folder, create a new file called &lt;strong&gt;UserStorage.sol&lt;/strong&gt;.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;At the top of your Solidity code, you must add the version of Solidity you are using. Solidity is constantly changing and updating the language. Therefore you need to state which version of Solidity you are using for this specific contract.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;The caret symbol `^` is to tell solidity that you want to use version 0.8.8 and above.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;This means you want to use a specific version.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;This means that any compiler between version 0.8.7 and 0.9.0 would work, but not 0.9.1.&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;Optionally you could also add `SPDX license identifier` to make licensing and sharing code easier. Some compiler might nag-warning you if you don&apos;t add this line of code. To learn more about software licenses, you can read &lt;a class=&quot;textlink&quot; target=&quot;_blank&quot; href=&quot;https://snyk.io/learn/what-is-a-software-license/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;For this blog, I&apos;d like to use Solidity ^0.8.8 and choose `MIT` to grant the software end user rights such as copying, modifying, merging, distributing, etc.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;Great, let&apos;s write our first contract!&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;When you hit Cmd + S (Ctrl + S) on Remix, you will see that the Solidity tab compiler will show a green checkmark. That means you compile your first contract successfully!&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/Solidity/remix-green-compiler.png&quot; alt=&quot;green compiler remix ethereum&quot; class=&quot;mx-auto w-full&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Remix: Green checkmark means sucessfully compiled.
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;You could deploy this contract, and it would be a valid contract. It would be a contract that doesn&apos;t really do anything, but technically speaking, you could.&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Solidity types&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;Solidity has multiple different types. Boolean, uint, int, address, and bytes are the most basic types that are often used. To learn more, you can check out solidity&apos;s documentation about &lt;a target=&quot;_blank&quot; class=&quot;textlink&quot; href=&quot;https://docs.soliditylang.org/en/latest/types.html&quot;&gt;types&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Boolean&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        Returns `true` or `false`. You can use various operators to compare.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;String&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        A string is actually a byte object but only for text.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Uint&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        It&apos;s an unsigned integer, meaning it&apos;s a whole number that is not positive or negative. Just positive.
        Type `uint` is unique because &lt;strong&gt;you can specify how many bits we want to allocate&lt;/strong&gt; for the value we keep in the variable from &lt;strong&gt;`uint8`&lt;/strong&gt; up to &lt;strong&gt;`uint256`&lt;/strong&gt;. If you don&apos;t specify the bits, it automatically &lt;span class=&quot;underline underline-offset-8&quot;&gt;defaults to 256&lt;/span&gt;.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Int&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        It&apos;s a signed integer, meaning it&apos;s a wholly positive or negative number. Same as `uint`, you can allocate the number of bits from 8 to 256.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Address&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        It&apos;s the address to which people can transfer and send values. An example is your Metamask address.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Bytes&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        A byte is a unit of memory data equal to eight bits. A bit is the smallest form of data, and it can either be `0` or `1`. In Solidity, bytes are treated like an array, and you can decode the bytes in the front-end. This is good because less data is stored on the blockchain.
    &lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;The reason why we have these types are to define different types of variables. &lt;strong&gt;Variables&lt;/strong&gt; are holders for different values.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isHuman&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callMe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Ivana&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;favNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xa3E2836600fD72a5D20e9EB63F61838C610dF8D5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;bytes32&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spritAnimal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;fox&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Let&apos;s create a simple smart contract!&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;But first, let&apos;s talk about &lt;strong&gt;function&lt;/strong&gt;. Function (or method) is a block of reusable code that can take some input as arguments and returns an output.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SPDX-License-Identifier: MIT
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pragma&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solidity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;Compile and deploy this contract on Remix:&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg lg:-mx-20 xl:-mx-40&quot;&gt;
        &lt;img src=&quot;/assets/images/Solidity/remix-deploy.gif&quot; alt=&quot;Remix ethereum deploying a contract&quot; class=&quot;mx-auto w-full&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Remix: Deploy your contract, click the fourth icon from top &lt;i class=&quot;ml-1 fa-brands fa-ethereum&quot;&gt;&lt;/i&gt;.
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    When you change a different value on the `show` function, you can see something happening to the contract, but you cannot see the new value yet. So how can you see that the transaction is executed successfully?
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The reason is that the visibility of our variable `luckyNumber` is set to private. To make our variable `luckyNumber` visible, we must set it to `public`.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;contract&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyContract&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    When we set the variable to `public`, you will see an extra button where you can see the value of `luckyNumber`.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Visibility specifier&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;There are four types of visibility:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visibility&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;specifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;returns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;ul&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;Public&lt;/strong&gt;: visible externally and internally. This creates a getter function for storage/state variables.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;Private&lt;/strong&gt;: visible for the current contract and the only.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;External&lt;/strong&gt;: visible for external functions only. Only developers outside this `MyContract` can call the function set to `external`.
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;Internal&lt;/strong&gt;: visible internally. Meaning only `MyContract` and its children can access it. When we don&apos;t specify a visibility specifier to a function or variable, they are &lt;span class=&quot;underline underline-offset-8&quot;&gt;automatically deployed as internal&lt;/span&gt;.
    &lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Transaction&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Remember that &lt;span class=&quot;underline underline-offset-8&quot;&gt;every time we change the state of the blockchain, we do a transaction&lt;/span&gt;. You can see all the details when you expand the transaction on the logging area of remix.
&lt;/p&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg lg:-mx-20 xl:-mx-40&quot;&gt;
        &lt;img src=&quot;/assets/images/Solidity/remix-transaction-expanded.png&quot; alt=&quot;Expand the transaction on the terminal&quot; class=&quot;mx-auto w-full&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Remix: Expand the transaction to see the breakdown of gas costs.
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;The more complex the function, the more expensive the transaction will cost. You can easily prove this by adding more code to our function `show` and then compiling and redeploying the contract.&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Transaction cost is 20402 gas
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Transaction cost is 44126 gas
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showAndMultiply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;No gas: view and pure functions&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    In Solidity, there are two functions that can be called without spending gas on it. Those are &lt;span class=&quot;underline underline-offset-8&quot;&gt;view&lt;/span&gt; and &lt;span class=&quot;underline underline-offset-8&quot;&gt;pure&lt;/span&gt;.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    View and pure functions &lt;span class=&quot;underline underline-offset-8&quot;&gt;disallow modification of state on the blockchain&lt;/span&gt;. Pure function disallows reading from the blockchain state.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    For our case, we can use a `view` function to read the state of our `luckyNumber` for free.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// `view` =&amp;gt; Reading the value but not making any changes to the blockchain.
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retrieve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/Solidity/remix-view-transaction.png&quot; alt=&quot;Remix: Blue button indicates no gas transaction cost.&quot; class=&quot;mx-auto w-full&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        Remix: Blue button indicates no gas transaction cost.
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    You might ask, why would anyone use a pure function if you cannot modify or read from the blockchain state?
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example of pure function
// calculate the cost based on price and amount
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getCost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Generally speaking, pure functions are guaranteed to not have side effects. It is easier to read and maintain. You will see the benefits down the road of your programming journey, and we can go into detail in a different post about the whys. As for now, I just need you to be aware that pure function exists in Solidity.
&lt;/p&gt;

&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;However...&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We are aware now that both view and pure function are gas free. However, if we have a &lt;span class=&quot;underline underline-offset-8&quot;&gt;gas cost function that calls view or pure function&lt;/span&gt;, this will cost us a gas fee.
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example of gas cost function that calls a pure function
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getCost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luckyNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Pure function
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getCost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint256&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Next...&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Following the steps above, you have officially written and deployed your first Solidity smart contract 👏👏👏
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Read next? &lt;a href=&quot;/web3/2022/10/11/solidity-structs-arrays.html&quot; class=&quot;ml-1 font-semibold textlink&quot;&gt;&quot;Solidity Structs and Arrays&quot;&lt;/a&gt;.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    ✨ I will write more about &lt;span class=&quot;line-through&quot;&gt;arrays, structs&lt;/span&gt;, bytes, the front-end part of Web 3.0 and eventually a &quot;real world&quot; smart contract project (could be NFT or DAO.. we&apos;ll figure it out later together) 🌈
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Any tips, feedback, or recommendations? Don&apos;t hesitate to reach me. I love learning new things 🤓
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Helpers&lt;/h2&gt;
&lt;ul&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://remix.ethereum.org/&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Remix IDE&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/types.html&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Different types&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/cheatsheet.html#function-visibility-specifiers&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Visibility specifier&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/introduction-to-smart-contracts.html#transactions&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Transactions on Blockchain&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/contracts.html#pure-functions&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;Pure function&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li class=&quot;relative pl-9 mb-2&quot;&gt;
        &lt;i class=&quot;absolute left-1 top-2 fa-duotone fa-code text-base&quot;&gt;&lt;/i&gt;
        &lt;strong&gt;&lt;a href=&quot;https://docs.soliditylang.org/en/latest/contracts.html#view-functions&quot; target=&quot;_blank&quot; class=&quot;textlink&quot;&gt;View function&lt;/a&gt;&lt;/strong&gt;
    &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="web3" /><category term="knowlegde" /><category term="blockchain" /><category term="Web3" /><category term="code" /><summary type="html">Solidity is is an object-oriented programming language for implementing smart contracts on various blockchain platforms, most notably, Ethereum.</summary></entry><entry><title type="html">Web 3.0</title><link href="http://localhost:4000/web3/2022/09/21/web-3.0.html" rel="alternate" type="text/html" title="Web 3.0" /><published>2022-09-21T07:34:00+02:00</published><updated>2022-09-21T07:34:00+02:00</updated><id>http://localhost:4000/web3/2022/09/21/web-3.0</id><content type="html" xml:base="http://localhost:4000/web3/2022/09/21/web-3.0.html">&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Hello Web 3.0&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    I am sure you have heard about &quot;Web 3.0&quot;, but what exactly? Is it all about digital currencies, like Bitcoin, Ethereum, and Cardano? or the decentralisation of the Web? or is it something else entirely?
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We cannot comprehend Web 3.0 before understanding what Web 1.0 and Web 2.0 are. So let&apos;s get to the history of the Web first.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Web 1.0 (&quot;read-only&quot;)&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Web 1.0 era lasted roughly from 1989 to 2005 and was called the &quot;Static Web&quot;. It consists of web pages connected by hyperlinks, and you cannot do any interactions. It was one way of providing information, but you, as a user, cannot do anything with it other than read it.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Web 1.0 is like opening a Wikipedia page that you know the exact URL, and... that&apos;s it.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Think about this, say you are a plumber in the era of Web 1.0 and successfully created your website with the URL &quot;www.awesome-plumber-robertsfors.com&quot;. How can people find you? They need to know your URL precisely; otherwise, forget about it. Now you can understand why search engine companies such as Google, Bing, or DuckDuckGo exist in the era of Web 2.0. Nowadays, it&apos;s easy to find plumbers ranging from highest to lowest rating or price in your area.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Web 1.0 era was pretty disorganised and overwhelming, but necessary to pave the way for the Web 2.0 era.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Web 2.0 (&quot;read-write&quot;)&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Web 2.0 began in 2005 and today we are transitioning to Web 3.0. It makes a lot of sense that Web 2.0 is considered the social era because it was born out of the necessity of the chaoticness of Web 1.0.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The three layers of innovation in Web 2.0 are &lt;strong&gt;mobile&lt;/strong&gt;, &lt;strong&gt;social&lt;/strong&gt; and &lt;strong&gt;cloud&lt;/strong&gt;. During this era, the advancement of web technologies enables startups to capture these opportunities in these layers:
&lt;/p&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Social&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        By building interactive web platforms where users can create profiles, add content or comments, and interact with each other. Social networks such as MySpace, Friendster, and Facebook help web users to connect and be less anonymous.
    &lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Mobile&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        Mobile connectivity to the Internet happened in the Web 2.0 era, allowing us to be online most of the time. In September 2022, there are 10.92 Billion mobile connections worldwide and 83,4% of the earth&apos;s population own smartphones. &lt;small&gt;(Source: https://www.bankmycell.com/blog/how-many-phones-are-in-the-world)&lt;/small&gt;
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        The numbers are not shocking, considering smartphones are affordable and seen as a necessity instead of a luxury item. In developing countries, such as Indonesia, it&apos;s not uncommon for a person to own at least two smartphones but no laptop.
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        Due to the rise of mobile connectivity and ownership, it&apos;s so easy to track our whereabouts, preferences, activities, habits and even desires.
    &lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Cloud&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        The massive amount of sudden connections and demands to be online requires a solution, and computing in the cloud was born out of it.
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        In plain words, cloud computing delivers computing services—including servers, storage, databases, networking, software, analytics, and intelligence—over the Internet (&quot;the cloud&quot;) to offer faster innovation, flexible resources, and economies of scale.
    &lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Web 2.0 helps the internet to the mainstream; Many successful startups, such as YouTube, Facebook, Google and Instagram, enable users to upload and distribute their content between various platforms, applications and the world without writing a single line of code.
The internet&apos;s easy access and smooth adoption seem like the perfect utopia, but these startups turn into giants, and the internet world becomes more centralised.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The centralisation of the internet issue, together with the advancement of technology (IoT), AI and machine learning, paved the way for the next generation of the internet, Web 3.0.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Web 3.0&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;Web 3.0 is built mainly on three new layers of technological innovation:&lt;/p&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Edge computing&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        A distributed computing paradigm brings computation and data storage closer to the data sources. This approach makes connection and data fetching faster, safer, efficient and more reliable.
    &lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Decentralised data networks&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        It enables you to sell or barter your data without losing ownership control, giving up privacy or reliance on third-party mediators. In short, you are in control of your data.
    &lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Artificial intelligence (AI)&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        Ever wonder how to double your revenue the best way possible? or to save costs efficiently? With enough data, AI &amp; machine learning algorithms can answer this with a clear explanation of why and how to get there.
    &lt;/p&gt;
&lt;/div&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Web 3.0 is a leap forward to open, trustless and permissionless networks. It promises a more intelligent, efficient, accurate, and connected online experience for everyone.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Why should you care about Web 3.0?&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    There are several important points why I think you should care and contribute to Web 3.0:
&lt;/p&gt;

&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Less reliance on centralised organisations&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        Thanks to &lt;a href=&quot;/web3/2022/09/13/what-is-blockchain.html&quot; target=&quot;_blank&quot; class=&quot;font-semibold textlink&quot;&gt;Blockchain technology&lt;/a&gt;, we no longer rely on the centralised organisation to do transactions for us. We can efficiently execute a transaction using a smart contract and have confidence that it will be done to the arrangement that both parties agreed upon.
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        I am not entirely against centralised parties. There are &lt;a href=&quot;/web3/2022/09/08/centralised-vs-decentralised-system.html&quot; target=&quot;_blank&quot; class=&quot;font-semibold textlink&quot;&gt;pros and cons for both centralised and decentralised paradigms&lt;/a&gt;. I think balance is the key, and it&apos;s refreshing to see that there is finally a decentralised approach option for internet users.
    &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Trust and privacy&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        We can stay anonymous and transparent at the same time. It doesn&apos;t sound very clear, but it&apos;s true. With Blockchain technology, you can be sure that a deal is a deal. Without knowing the other person, you can trust that they will deliver what they promise because the contract won&apos;t be fulfilled until the criteria are met.
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        There&apos;s one thing that might be undesirable for some people. Everyone can see your transactions. Understandably, sometimes you want to have your privacy
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;Don&apos;t worry! We have &lt;strong&gt;zero-knowledge proofs&lt;/strong&gt;. A zero-knowledge proof is a way of &lt;strong&gt;proving the validity of a statement without revealing the statement itself&lt;/strong&gt;. So the public can see your transactions, but that doesn&apos;t mean they can fully know the agreement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;pl-4 md:pl-6 lg:pl-9 border-l-4 border-gray-400 dark:border-gray-200&quot;&gt;
    &lt;h3 class=&quot;text-base font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;IoT&lt;/h3&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        The Internet of things (IoT) is pretty rad! It refers to the connected billions of physical devices worldwide to the Internet. These devices have sensors, processing ability, software, etc that connect and exchange data with other devices and systems over the Internet or other communications networks.
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        IoT is your smart-everything. It&apos;s your smart-watch, smart-refrigerator,  smart-thermostat, smart-bell, smart-lamps, you name it. IoT enables your devices to talk to one another too. Your refrigerator can communicate with your digital shopping list to remind you to buy more oat milk, for example.
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        IoT requires a super reliable and fast network and thanks to the 5G network, which enables 100x quicker speeds than 4G, it can enhance edge computing applications significantly.
    &lt;/p&gt;
    &lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
        OK look, I am not a gadget nerd, and it could be scary to think of the end-of-the-world scenario where machines go wild and my refrigerator murders me. But think of another scenario of how IoT + AI could save billions of people&apos;s lives in healthcare, climate solutions, or food industries.
    &lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Web 3.0 is essential for our future. We are attempting to enable people to have complete control over their data and privacy on the Internet and less reliance on centralised organisations. On top of it, the IoT and advancement of edge computing sounds amazing.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Some people I talked with are very sceptical about Web 3.0, and I understand why. There are too many noises with cryptocurrency pump-and-dump scams, counterfeit NFTs, and getting rich (or bankrupt) super fast and easy.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    However, I think Web 3.0 is more profound than those noises. It&apos;s the future of the Web. I can see how I can buy my house or car entirely using smart contracts. Or how my smart watch can send data to my doctor&apos;s software every month to monitor my health and pay them using cryptocurrency, automatically executed using smart contracts.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    You can call me a dork, but I can see how people can book virtual DJs, hire a metaverse decorator, hire NFT artists to create and send NFT invitations and celebrate their events on a metaverse.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    I can see all the benefits Web 3.0 can give to the event industry and creative event vendors for my startup &lt;a href=&quot;https://www.venopi.com&quot; target=&quot;_blank&quot; class=&quot;font-semibold textlink&quot;&gt;Venopi&lt;/a&gt;. Even if I couldn&apos;t get funding for Venopi, I still want to work and contribute to the future of the Web. That&apos;s why I self-taught myself how to be a developer in Web 3.0.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    For everyone reading this, I hope this article helps you understand more about Web 3.0 and get excited to jump into the space and help shape the Web&apos;s future. It&apos;s still so early, and we can be a part of the solution. Doesn&apos;t it sound like a lot of fun?
&lt;/p&gt;</content><author><name></name></author><category term="web3" /><category term="knowlegde" /><category term="tips" /><category term="blockchain" /><category term="Web3" /><summary type="html">I am sure you have heard about &quot;Web 3.0&quot;, but what exactly? Is it all about digital currencies, like Bitcoin, Ethereum, and Cardano? or the decentralisation of the Web? or is it something else entirely?</summary></entry><entry><title type="html">How do you create a transaction in a Blockchain? [Read me third]</title><link href="http://localhost:4000/web3/2022/09/16/how-do-you-create-a-transaction-in-a-blockchain.html" rel="alternate" type="text/html" title="How do you create a transaction in a Blockchain? [Read me third]" /><published>2022-09-16T09:34:00+02:00</published><updated>2022-09-16T09:34:00+02:00</updated><id>http://localhost:4000/web3/2022/09/16/how-do-you-create-a-transaction-in-a-blockchain</id><content type="html" xml:base="http://localhost:4000/web3/2022/09/16/how-do-you-create-a-transaction-in-a-blockchain.html">&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    This article is a continuation of &lt;a href=&quot;/web3/2022/09/13/what-is-blockchain.html&quot; class=&quot;font-semibold textlink&quot;&gt;&quot;What is Blockchain?&quot;&lt;/a&gt;. I&apos;d highly recommend you to read that first.
&lt;/p&gt;

&lt;p class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;
    The Bridge
    &lt;small class=&quot;font-normal text-slate-500 text-base&quot;&gt;- No, not the TV show&lt;/small&gt;
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We are at the last chapter of understanding Blockchain, following the journey of three best friends named Eki, Dwi, and Tri. We have learned how the blocks can chain each other and how it demonstrates a secure method of storing data without a centralised party, like banks or corporates.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The next burning question is, How do Eki, Dwi, Tri and you add a transaction to a Blockchain?
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Lock and Key&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Every user in a Blockchain will have a &lt;strong&gt;public&lt;/strong&gt; and a &lt;strong&gt;private&lt;/strong&gt; key. These public and private keys are generated automatically by the Blockchain software. They look like the hashes we discussed in the first chapter: &lt;a target=&quot;_blank&quot; href=&quot;/web3/2022/09/13/what-is-blockchain.html#fingerprint-hash&quot; class=&quot;font-semibold textlink&quot;&gt;Fingerprint hash&lt;/a&gt;.
&lt;/p&gt;
&lt;div class=&quot;border border-gray-500 dark:border-gray-200 border-dashed leading-loose overflow-x-auto mb-4 md:mb-6 text-sm&quot;&gt;
    &lt;p class=&quot;px-4 py-1 border-b border-gray-500 border-dashed font-semibold&quot;&gt;User: Eki&lt;/p&gt;
    &lt;div class=&quot;p-4 md:p-6 border-b border-gray-500 border-dashed flex items-center&quot;&gt;
        &lt;div&gt;
            &lt;i class=&quot;text-3xl mr-4 lg:mr-6 fa-regular fa-lock-keyhole&quot;&gt;&lt;/i&gt;
        &lt;/div&gt;
        &lt;div&gt;
            -----THIS IS YOUR DUMMY PUBLIC KEY-----&lt;br&gt;
            MIGeMA0GCSqGSIb3DQEBAQUAA4GMADCBiAKBgGpAAefcqtMn...AAE=&lt;br&gt;
            -----END PUBLIC KEY-----
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;p-4 md:p-6 flex items-center&quot;&gt;
        &lt;div&gt;
            &lt;i class=&quot;text-3xl mr-4 lg:mr-6 fa-regular fa-key&quot;&gt;&lt;/i&gt;
        &lt;/div&gt;
        &lt;div&gt;
            -----THIS IS YOUR DUMMY RSA PRIVATE KEY-----&lt;br&gt;
            MIICWwIBAAKBgGpAAefcqq2n29lhnSCyA/ThQtMnP&lt;br&gt;
            lQ5x9BxNhOzzkr49G/rqZpwKFvkZ26v7GkVaepQNf21HxZ6I...0OA==&lt;br&gt;
            -----END RSA PRIVATE KEY-----
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    It would be best if you keep your private key private and secure. On the contrary, you can share the public key with everyone.
&lt;/p&gt;

&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    A good illustration of this is your mailbox and your key. Your mailbox is your public key and the key to open your mailbox is your private key. You don&apos;t want anybody to access your mailbox and read all of your messages.
&lt;/p&gt;

&lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
    &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
        &lt;img src=&quot;/assets/images/Web3/public-private-key-chart.svg&quot; alt=&quot;To create a digital signature you need a private key and &lt;br&gt;to verify the digital signature you need the corresponding public key.&quot; class=&quot;max-w-lg mx-auto w-full&quot; /&gt;
    &lt;/div&gt;

    &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
        To create a digital signature you need a private key and &lt;br&gt;to verify the digital signature you need the corresponding public key.
    &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    We can use the private key to create a digital signature to sign any message. The digital signature can be verified using the corresponding public key.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    The combination of these layers of security is called &lt;strong&gt;cryptography in Blockchains&lt;/strong&gt;.
&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;What does this flow look like in real-world scenarios?&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Eki wants to document the trio&apos;s latest savings on a Blockchain:
&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-solidity&quot; data-lang=&quot;solidity&quot;&gt;&lt;span class=&quot;n&quot;&gt;Eki&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;€&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dwi&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;€&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tri&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;€&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;900&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;1&lt;/span&gt; &lt;p&gt;Eki writes and signs the data using Eki&apos;s private key to create a digital signature. The data combined with the signature is a transaction.&lt;/p&gt;

        &lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
            &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
                &lt;img src=&quot;/assets/images/Web3/public-private-key-1.svg&quot; alt=&quot;Eki writes and signs the data using Eki&apos;s private key to create a digital signature. The data combined with the signature is a transaction&quot; class=&quot;max-w-lg mx-auto w-full&quot; /&gt;
            &lt;/div&gt;

            &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
                Creating a transaction using private key
            &lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/li&gt;

    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;2&lt;/span&gt; &lt;p&gt;Eki broadcasts the transaction to everyone on the peer-to-peer network using the Blockchain software.&lt;/p&gt;

        &lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
            &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
                &lt;img src=&quot;/assets/images/Web3/public-private-key-2.svg&quot; alt=&quot;Eki broadcasts the transaction to everyone on the peer-to-peer network using the Blockchain software&quot; class=&quot;max-w-lg mx-auto w-full&quot; /&gt;
            &lt;/div&gt;

            &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
                Broadcasting the transaction to the peer-to-peer network
            &lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/li&gt;

    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;3&lt;/span&gt; &lt;p&gt;Everyone in the peer-to-peer network verifies the new transaction signature using Eki&apos;s public key to confirm that Eki is the person who signed the transaction.&lt;/p&gt;

        &lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
            &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
                &lt;img src=&quot;/assets/images/Web3/public-private-key-3.svg&quot; alt=&quot;Everyone in the peer-to-peer network verifies the new transaction signature using Eki&apos;s public key to confirm that Eki is the person who signed the transaction&quot; class=&quot;max-w-lg mx-auto w-full&quot; /&gt;
            &lt;/div&gt;

            &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
                Everyone in the peer-to-peer network verifies the new transaction
            &lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/li&gt;

    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;4&lt;/span&gt; &lt;p&gt;The peer-to-peer network will then include Eki&apos;s new verified transaction on a block in a Blockchain.&lt;/p&gt;

        &lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
            &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
                &lt;img src=&quot;/assets/images/Web3/public-private-key-4.svg&quot; alt=&quot;The peer-to-peer network will then include Eki&apos;s new verified transaction on a block in a Blockchain&quot; class=&quot;max-w-lg mx-auto w-full&quot; /&gt;
            &lt;/div&gt;

            &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
                Include Eki&apos;s new transaction on a block in a Blockchain
            &lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/li&gt;

    &lt;li class=&quot;relative pl-12&quot;&gt;
        &lt;span class=&quot;w-8 h-8 inline-block text-center leading-7 rounded-full bg-pink-300 dark:bg-pink-600 absolute top-1 left-0&quot;&gt;5&lt;/span&gt; &lt;p&gt;After reaching &lt;a href=&quot;/web3/2022/09/16/peer-to-peer-network-in-blockchain.html#consensus-peer-to-peer&quot; target=&quot;_blank&quot; class=&quot;font-semibold textlink&quot;&gt;the consensus&lt;/a&gt;, the peer-to-peer network will include Eki&apos;s new transaction in all nodes in the Blockchain.&lt;/p&gt;

        &lt;figure class=&quot;my-4 md:my-6 lg:my-8&quot;&gt;
            &lt;div class=&quot;p-4 bg-slate-50 rounded-lg&quot;&gt;
                &lt;img src=&quot;/assets/images/Web3/public-private-key-5.svg&quot; alt=&quot;After reaching the consensus, the peer-to-peer network will include Eki&apos;s new transaction in all nodes in the Blockchain&quot; class=&quot;max-w-lg mx-auto w-full&quot; /&gt;
            &lt;/div&gt;

            &lt;figcaption class=&quot;text-sm mt-2 mb-4 md:mb-6 text-gray-500 dark:text-gray-300 italic&quot;&gt;
                Consensus reached - Eki&apos;s new transaction will be added in all nodes in the Blockchain
            &lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/li&gt;
&lt;/ol&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;That&apos;s it! Now, this particular record is immutable and securely saved in the Blockchain.&lt;/p&gt;&lt;div class=&quot;my-9 md:my-14 text-center h-12 relative&quot; id=&quot;&quot;&gt;
    &lt;div class=&quot;before:border-t before:border-t-slate-400 before:border-dashed before:w-full before:absolute before:left-0 before:top-6&quot;&gt;
		&lt;span class=&quot;px-4 py-1.5 inline-block bg-slate-200 relative border-l-4 border-l-slate-400 dark:bg-slate-700&quot;&gt;
			&lt;i class=&quot;fa-light fa-face-exhaling text-2xl mr-1&quot;&gt;&lt;/i&gt;
			&lt;span class=&quot;text-sm inline-block&quot;&gt;breathe...&lt;/span&gt;
		&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;text-2xl font-semibold mt-6 mb-4 md:mt-9 md:mb-6&quot;&gt;Whoa! This is it.&lt;/h2&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Clap.. Clap.. Clap 👏
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    You stick to it! Now I hope you fully understand what and how Blockchain works.
&lt;/p&gt;
&lt;p class=&quot;mb-4 md:mb-6&quot;&gt;
    Need a refresher? Read the first chapter:
    &lt;a href=&quot;/web3/2022/09/13/what-is-blockchain.html&quot; class=&quot;font-semibold textlink&quot;&gt;What is a &apos;Blockchain&apos;?&lt;/a&gt;
&lt;/p&gt;</content><author><name></name></author><category term="web3" /><category term="knowlegde" /><category term="tips" /><category term="blockchain" /><category term="Web3" /><summary type="html">What and how does peer to peer network work in Blockchain?</summary></entry></feed>